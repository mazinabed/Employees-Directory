{"ast":null,"code":"var _jsxFileName = \"/Users/mazinabed/Desktop/Employees-Directory/src/components/EmployeeTable.js\";\nimport React, { useContext } from 'react';\nimport { AppContext } from './AppContext';\n\nconst EmployeeTable = () => {\n  // Grab Search data to filter against\n  const {\n    search\n  } = useContext(AppContext);\n  const {\n    employeeData\n  } = useContext(AppContext);\n  const [employeeDatas\n  /*setEmployeeDatas*/\n  ] = employeeData;\n  const {\n    fetch\n  } = useContext(AppContext);\n  const [fetchings\n  /*setFetchings*/\n  ] = fetch;\n  const {\n    sort\n  } = useContext(AppContext);\n  const [sorting, setSorting] = sort;\n  const {\n    sortImgSrc\n  } = useContext(AppContext);\n  const [sortImg, setSortImg] = sortImgSrc;\n\n  const alphaCheck = e => {\n    setSorting(sorting === \"alpha\" ? \"notAlpha\" : \"alpha\");\n    setSortImg(sortImg === \"/img/arrow-up.svg\" ? \"/img/arrow-down.svg\" : \"/img/arrow-up.svg\");\n  };\n\n  return React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Picture\"), React.createElement(\"th\", {\n    className: \"alpha\",\n    onClick: alphaCheck,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Name \", React.createElement(\"img\", {\n    src: sortImg,\n    alt: \"Sort Arrow\",\n    width: \"13px\",\n    height: \"13px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Age\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Location\")), fetchings === false ? React.createElement(\"tr\", {\n    className: \"employee\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }) : React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, employeeDatas.filter(employee => {\n    let name = employee.name.first + ' ' + employee.name.last;\n    return name.toLowerCase().includes(search[0].toLowerCase());\n  })\n  /* Sorts the data for alphabetical forwards for backwards */\n  .sort((a, b) => {\n    if (sorting === \"alpha\") {\n      return a.name.first + ' ' + a.name.last > b.name.first + ' ' + b.name.last ? 1 : -1;\n    } else {\n      return a.name.first + ' ' + a.name.last < b.name.first + ' ' + b.name.last ? 1 : -1;\n    }\n  })\n  /* Loops the content left and send it to the front end  */\n  .map((employee, index) => React.createElement(\"tr\", {\n    className: \"employee\",\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    className: \"employee-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: employee.picture.medium,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), React.createElement(\"td\", {\n    className: \"employee-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, employee.name.first + ' ' + employee.name.last), React.createElement(\"td\", {\n    className: \"employee-email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, employee.email), React.createElement(\"td\", {\n    className: \"employee-age\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, employee.dob.age), React.createElement(\"td\", {\n    className: \"employee-location\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, employee.location.state))))));\n};\n\nexport default EmployeeTable;","map":{"version":3,"sources":["/Users/mazinabed/Desktop/Employees-Directory/src/components/EmployeeTable.js"],"names":["React","useContext","AppContext","EmployeeTable","search","employeeData","employeeDatas","fetch","fetchings","sort","sorting","setSorting","sortImgSrc","sortImg","setSortImg","alphaCheck","e","filter","employee","name","first","last","toLowerCase","includes","a","b","map","index","picture","medium","email","dob","age","location","state"],"mappings":"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","sourcesContent":["import React,{useContext} from 'react';\nimport { AppContext } from './AppContext';\n\nconst EmployeeTable = () => {\n\n  // Grab Search data to filter against\n  const {search} = useContext(AppContext);\n  const {employeeData} = useContext(AppContext);\n  const [employeeDatas, /*setEmployeeDatas*/] =  employeeData;\n  const {fetch} = useContext(AppContext);\n  const [fetchings, /*setFetchings*/] =  fetch;\n  const {sort} = useContext(AppContext);\n  const [sorting, setSorting] = sort;\n  const {sortImgSrc} = useContext(AppContext);\n  const [sortImg, setSortImg] = sortImgSrc;\n\n  const alphaCheck = (e) =>{\n    setSorting( sorting === \"alpha\" ? \"notAlpha\": \"alpha\");\n    setSortImg( sortImg === \"/img/arrow-up.svg\" ? \"/img/arrow-down.svg\": \"/img/arrow-up.svg\");\n  }\n\n  return(\n    <table >\n      <tbody>\n      <tr>\n        <th>Picture</th>\n        <th className=\"alpha\" onClick={alphaCheck}>Name <img src={sortImg} alt=\"Sort Arrow\" width=\"13px\" height=\"13px\"/></th>\n        <th>Email</th>\n        <th>Age</th>\n        <th>Location</th>\n      </tr>\n       {fetchings === false ?  \n        <tr className=\"employee\"></tr>\n        : (\n      <React.Fragment>\n        {/* Grabs all employee data and filters it for searchfield value */}\n       {employeeDatas.filter((employee) => { \n         let name = employee.name.first + ' ' + employee.name.last;\n        return name.toLowerCase().includes(search[0].toLowerCase())\n       })\n        /* Sorts the data for alphabetical forwards for backwards */\n       .sort((a,b) =>{\n         if (sorting === \"alpha\"){\n          return (a.name.first + ' ' + a.name.last > b.name.first + ' ' + b.name.last) ? 1 : -1;\n         }else{\n          return (a.name.first + ' ' + a.name.last < b.name.first + ' ' + b.name.last) ? 1 : -1;\n         }\n        \n       })\n       /* Loops the content left and send it to the front end  */\n       .map((employee, index) => (\n    <tr className=\"employee\" key={index}>\n      <td className=\"employee-img\"><img src={employee.picture.medium}  alt=\"\"/></td>\n      <td className=\"employee-name\">{employee.name.first + ' ' + employee.name.last }</td>\n      <td className=\"employee-email\">{employee.email}</td>\n      <td className=\"employee-age\">{employee.dob.age}</td>\n      <td className=\"employee-location\">{employee.location.state}</td>\n    </tr>\n))}\n      </React.Fragment>\n        )}\n        </tbody>\n    </table>\n    );\n  }\n  \n  export default EmployeeTable"]},"metadata":{},"sourceType":"module"}